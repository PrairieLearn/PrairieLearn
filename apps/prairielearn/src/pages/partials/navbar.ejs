<% if (devMode && locals.__csrf_token) { %>
  <!--
    Unit tests often need access to the CSRF token even when the page contains
    no form - for example, to confirm that a POST with a prohibited action is
    denied. For convenience, we include the CSRF token here, on all pages. We
    do this only in devMode and only for the purpose of testing. DO NOT RELY
    ON OR USE THIS CSRF TOKEN FOR ANYTHING OTHER THAN UNIT TESTS!
  -->
  <span id="test_csrf_token" hidden><%= __csrf_token %></span>
<% } %>

<% if (config.announcementHtml) { %>
  <div class="alert alert-<%= config.announcementColor ?? 'primary' %> mb-0 rounded-0 text-center">
    <%- config.announcementHtml %>
  </div>
<% } %>

<nav class="navbar navbar-dark bg-dark navbar-expand-md" aria-label="Global navigation">
  <a class="navbar-brand" href="<%= homeUrl %>">
    <span class="navbar-brand-label">PrairieLearn</span>
    <span class="navbar-brand-hover-label text-secondary">Go home <i class="fa fa-angle-right" aria-hidden="true"></i></span>
  </a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div id="course-nav" class="collapse navbar-collapse">
    <ul class="nav navbar-nav mr-auto" id="main-nav">
      <% if (typeof navbarType == 'undefined' || navbarType == 'plain') { %>
        <%- include('navbarPlain'); %>
      <% } else if (navbarType == 'student') { %>
        <%- include('navbarStudent'); %>
      <% } else if (navbarType == 'instructor') { %>
        <%- include('navbarInstructor'); %>
      <% } else if (navbarType == 'institution') { %>
        <%- include('navbarInstitution'); %>
      <% } else if (navbarType == 'public') { %>
        <%- include('navbarPublic'); %>
      <% } else { %>
        <% throw new Error('Unknown navbarType: ' + navbarType); %>
      <% } %>
    </ul>

    <%# User and logout %>
    <%
    let displayedName;
    if (locals.authz_data) {
      if (locals.authz_data.user.name) {
        displayedName = authz_data.user.name;
      } else {
        displayedName = authz_data.user.uid;
      }

      if (authz_data.mode != 'Public') {
        displayedName += ' (' + authz_data.mode + ')';
      }
    } else if (locals.authn_user) {
      if (authn_user.name) {
        displayedName = authn_user.name;
      } else {
        displayedName = authn_user.uid;
      }
    } else {
      displayedName = '(no user)';
    }
    %>

    <ul
      class="nav navbar-nav"
      id="username-nav"
      data-access-as-administrator="<%= locals.access_as_administrator?.toString() %>"
      data-view-type="<%= typeof viewType !== 'undefined' ? viewType : null %>"
      data-authn-course-role="<%= locals.authz_data?.authn_course_role %>"
      data-authn-course-instance-role="<%= locals.authz_data?.authn_course_instance_role %>"
      data-has-instructor-access="<%= locals.authz_data?.user_with_requested_uid_has_instructor_access_to_course_instance?.toString() %>"
    >
      <% if (devMode) { %>
          <li class="mb-2 mb-md-0 mr-2 "><a id="navbar-load-from-disk" class="btn btn-success" href="<%= urlPrefix %>/loadFromDisk">Load from disk</a></li>
      <% } %>


      <li class="nav-item dropdown mb-2 mb-md-0 mr-2 <% if (navPage == "effective") { %>active<% } %>">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <%= displayedName %>

          <% if (navbarType == 'student' && locals.course_instance && (authz_data.authn_has_course_permission_preview || authz_data.authn_has_course_instance_permission_view)) { %>
            <span class="badge badge-warning">student</span>
          <% } else if (locals.authz_data && authz_data.overrides) { %>
            <span class="badge badge-warning">modified</span>
          <% } else if (navbarType == 'instructor') { %>
            <span class="badge badge-success">staff</span>
          <% } %>

          <% if (typeof news_item_notification_count != 'undefined' && news_item_notification_count > 0) { %>
            <span class="badge badge-pill badge-primary news-item-count"><%= news_item_notification_count %></span>
          <% } %>
        </a>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">

          <% if (locals.authn_is_administrator) { %>

            <a class="dropdown-item" id="navbar-administrator-toggle">
              <% if (locals.access_as_administrator) { %>Turn off administrator access<% } else { %>Turn on administrator access<% } %>
            </a>

            <div class="dropdown-divider"></div>

          <% } %>

          <% if (typeof viewType !== 'undefined' && locals.course_instance && (authz_data.authn_has_course_permission_preview || authz_data.authn_has_course_instance_permission_view)) {
            // Only show "View type" menu(s) if the following two things are true:
            // - The authn user was given access to a course instance (so, both viewType and authz_data also exist).
            // - In particular, the authn user has instructor access to this course instance.
            //
            // Note that the effective user may still have been denied access. In this
            // case, urlPrefix may not be consistent with the page that the effective user
            // was trying to access (instead, it will be consistent with a "plain" page).
            // So, to be safe, we use plainUrlPrefix and construct all full URLs by hand.

            var instructorLink = '#';
            var studentLink = '#';
            if (viewType == 'instructor') {
              if (locals.assessment && assessment.id) {
                studentLink = `${plainUrlPrefix}/course_instance/${course_instance.id}/assessment/${assessment.id}`;
              } else {
                studentLink = `${plainUrlPrefix}/course_instance/${course_instance.id}/assessments`;
              }
            } else {
              if (locals.question && question.id) {
                instructorLink = `${urlPrefix}/instructor/question/${question.id}`;
              } else if (locals.assessment_instance && assessment_instance.assessment_id) {
                instructorLink = `${urlPrefix}/instructor/assessment/${assessment_instance.assessment_id}`;
              } else {
                instructorLink = `${urlPrefix}/instructor/instance_admin`;
              }
            }

            var headingAuthnViewTypeMenu = 'View type';
            if (authz_data.authn_user.uid != authz_data.user.uid) {
              headingAuthnViewTypeMenu = 'View as';
              if (authz_data.authn_user.name) {
                headingAuthnViewTypeMenu += ` ${authz_data.authn_user.name} (${authz_data.authn_user.uid})`;
              } else {
                headingAuthnViewTypeMenu += ` ${authz_data.authn_user.uid}`;
              }
            }

            var authnViewTypeMenuChecked = '';
            if (authz_data.authn_user.uid == authz_data.user.uid) {
              if (viewType == 'instructor') {
                if (authz_data.has_course_permission_preview || authz_data.has_course_instance_permission_view) {
                  authnViewTypeMenuChecked = 'instructor'
                }
              } else {
                if (authz_data.has_course_permission_preview || authz_data.has_course_instance_permission_view) {
                  authnViewTypeMenuChecked = 'student-no-rules'
                } else {
                  authnViewTypeMenuChecked = 'student'
                }
              }
            }
          %>

            <% if (locals.authz_data?.overrides && authnViewTypeMenuChecked == 'instructor') { %>
              <a class="dropdown-item" href="<%= instructorLink %>" id="navbar-reset-view">
                Reset to default staff view <span class="badge badge-success">staff</span>
              </a>

              <div class="dropdown-divider"></div>
            <% } %>


            <h6 class="dropdown-header"><%= headingAuthnViewTypeMenu %></h6>

            <a class="dropdown-item" href="<%= instructorLink %>" id="navbar-user-view-authn-instructor">
              <div class="d-flex flex-row justify-content-left">
                <div class="col-1 px-0"><% if (authnViewTypeMenuChecked == 'instructor') { %>&check;<% } %></div>
                <div class="col pl-0">
                  <% if (locals.authz_data?.overrides && authnViewTypeMenuChecked == 'instructor') { %>Modified staff<% } else { %>Staff<% } %>
                  view <span class="badge badge-success">staff</span>
                </div>
              </div>
            </a>

            <a class="dropdown-item" href="<%= studentLink %>" id="navbar-user-view-authn-student">
              <div class="d-flex flex-row justify-content-left">
                <div class="col-1 px-0"><% if (authnViewTypeMenuChecked == 'student') { %>&check;<% } %></div>
                <div class="col pl-0">Student view <span class="badge badge-warning">student</span></div>
              </div>
            </a>

            <a class="dropdown-item" href="<%= studentLink %>" id="navbar-user-view-authn-student-no-rules">
              <div class="d-flex flex-row justify-content-left">
                <div class="col-1 px-0"><% if (authnViewTypeMenuChecked == 'student-no-rules') { %>&check;<% } %></div>
                <div class="col pl-0">Student view without access restrictions <span class="badge badge-warning">student</span></div>
              </div>
            </a>

            <% if (authz_data.authn_user.uid != authz_data.user.uid) {

              var headingViewTypeMenu = 'View as';
              if (authz_data.user.name) {
                headingViewTypeMenu += ` ${authz_data.user.name} (${authz_data.user.uid})`;
              } else {
                headingViewTypeMenu += ` ${authz_data.user.uid}`;
              }

              var viewTypeMenuChecked = '';
              if (viewType == 'instructor') {
                if (authz_data.has_course_permission_preview || authz_data.has_course_instance_permission_view) {
                  viewTypeMenuChecked = 'instructor'
                }
              } else {
                if (authz_data.has_course_permission_preview || authz_data.has_course_instance_permission_view) {
                  viewTypeMenuChecked = 'student-no-rules'
                } else {
                  viewTypeMenuChecked = 'student'
                }
              }
            %>

              <div class="dropdown-divider"></div>
              <h6 class="dropdown-header"><%= headingViewTypeMenu %></h6>

              <% if (authz_data.user_with_requested_uid_has_instructor_access_to_course_instance) { %>
                <a class="dropdown-item" href="<%= instructorLink %>" id="navbar-user-view-instructor">
                  <div class="d-flex flex-row justify-content-left">
                    <div class="col-1 px-0"><% if (viewTypeMenuChecked == 'instructor') { %>&check;<% } %></div>
                    <div class="col pl-0">Staff view</div>
                  </div>
                </a>
              <% } %>

              <a class="dropdown-item" href="<%= studentLink %>" id="navbar-user-view-student">
                <div class="d-flex flex-row justify-content-left">
                  <div class="col-1 px-0"><% if (viewTypeMenuChecked == 'student') { %>&check;<% } %></div>
                  <div class="col pl-0">Student view</div>
                </div>
              </a>

              <a class="dropdown-item" href="<%= studentLink %>" id="navbar-user-view-student-no-rules">
                <div class="d-flex flex-row justify-content-left">
                  <div class="col-1 px-0"><% if (viewTypeMenuChecked == 'student-no-rules') { %>&check;<% } %></div>
                  <div class="col pl-0">Student view without access restrictions</div>
                </div>
              </a>

            <% } %>

            <div class="dropdown-divider"></div>

          <% } %>

          <% if (locals.authz_data && (authz_data.authn_has_course_permission_preview || authz_data.authn_has_course_instance_permission_view)) {

            let effectiveUserUrl = `${urlPrefix}/effectiveUser`;
            if (navbarType != 'student' && navbarType != 'instructor') {
              // The only way for auhz_data to exist, for authn_has_course_permission_preview to be true,
              // and for navbarType to be neither student nor instructor, is if we are in a course or course
              // instance and if the effective user does not have access.
              //
              // In this case, we still want a link to the "Change effective user" page, but we need to
              // construct this link from scratch, because urlPrefix corresponds neither to the student
              // page route nor the instructor page route (it gets set after successful authorization).
              //
              // It is ok to use the instructor route only to the effectiveUser page - this will redirect
              // to the student route if necessary.
              if (locals.course_instance) {
                effectiveUserUrl = `${plainUrlPrefix}/course_instance/${course_instance.id}/instructor/effectiveUser`;
              } else {
                effectiveUserUrl = `${plainUrlPrefix}/course/${course.id}/effectiveUser`;
              }
            }
          %>
            <h6 class="dropdown-header">Effective user</h6>

            <form class="form-inline dropdown-item-text d-flex flex-nowrap js-effective-uid-form">
              <label class="sr-only" for="effective-uid">UID</label>
              <input
                id="effective-uid"
                type="email"
                placeholder="student@example.com"
                class="form-control form-control-sm mr-2 flex-grow-1 js-effective-uid-input"
              >
              <button
                type="submit"
                class="btn btn-primary btn-sm text-nowrap js-effective-uid-button"
                disabled
              >
                Change UID
              </button>
            </form>

            <% if (authz_data.overrides) { %>
              <div class="dropdown-item-text">
                <div class="list-group small text-nowrap">
                  <% authz_data.overrides.forEach(function(override) { %>
                    <%- include('navbarUserDropdownOverrideItem', {override: override}); %>
                  <% }); %>
                </div>
              </div>
            <% } %>

            <a class="dropdown-item" href="<%= effectiveUserUrl %>">
              Customize&hellip;
            </a>

            <div class="dropdown-divider"></div>

          <% } %>

          <% if (locals.authz_data && authz_data.mode == 'Exam') { %>
            <div class="dropdown-item-text">
              Exam mode means you have a checked-in reservation to CBTF. Your interactions with PrairieLearn are limited to your checked-in exam for the duration of your reservation.
            </div>
            <div class="dropdown-divider"></div>
          <% } %>

          <% if (typeof authz_data === 'undefined' ||
                (typeof authz_data !== 'undefined' && authz_data.mode != 'Exam')) {%>
            <a class="dropdown-item" href="<%= plainUrlPrefix %>/request_course"> Course Requests </a>
          <% } %>
          <a class="dropdown-item" href="<%= plainUrlPrefix %>/settings">Settings</a>
          <a class="dropdown-item news-item-link" href="<%= urlPrefix %>/news_items"
            <% if (typeof news_item_notification_count !== 'undefined' && news_item_notification_count > 0) { %>
              title="News (<%= news_item_notification_count %> unread)"
              aria-label="News (<%= news_item_notification_count %> unread)"
            <% } else { %>
              title="News"
              aria-label="News"
            <% } %>
          >
            News
            <% if (typeof news_item_notification_count != 'undefined' && news_item_notification_count > 0) { %>
              <span class="badge badge-pill badge-primary news-item-link-count"><%= news_item_notification_count %></span>
            <% } %>
          </a>

          <a class="dropdown-item" href="<%= plainUrlPrefix %>/logout">Log out</a>

        </div>
      </li>
    </ul>
  </div>
</nav>

<% // Mapping navPage to navtab sets
const navPagesTabs = {
    instance_admin: 'navTabs/instructorInstanceAdmin',
    course_admin: 'navTabs/instructorCourseAdmin',
    assessment: 'navTabs/instructorAssessment',
    question: 'navTabs/instructorQuestion',
    admin: 'navTabs/administrator',
    institution_admin: 'navTabs/institutionAdmin',
};
// If navPage matches any of the keys in navPagesTabs, include the page given by its value
if (typeof navPage != 'undefined' && navPagesTabs.hasOwnProperty(navPage)) { %>
    <!-- Instructor navigation tabs -->
    <nav>
        <ul class="nav nav-tabs pl-nav-tabs-bar pt-2 px-3 bg-light">
            <%- include(navPagesTabs[navPage]); %>
        </ul>
    </nav>
<% } %>

<div class="mb-3">
  <% const globalFlashColors = { 'notice': 'info', 'success': 'success', 'warning': 'warning', 'error': 'danger' }; %>
  <% typeof flash !== 'undefined' && flash(Object.keys(globalFlashColors)).forEach(({ type, message }) => { %>
    <div class="alert alert-<%= globalFlashColors[type] %> border-left-0 border-right-0 rounded-0 mt-0 mb-0 alert-dismissible fade show js-global-flash" role="alert">
      <%- message %>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
  <% }); %>
</div>
