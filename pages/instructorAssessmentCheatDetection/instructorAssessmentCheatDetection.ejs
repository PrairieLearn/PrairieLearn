<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head', {pageTitle: 'cheat_detection'}); %>
    <script src="<%= node_modules_asset_path('lodash/lodash.min.js') %>"></script>
    <script src="<%= node_modules_asset_path('d3/dist/d3.min.js') %>"></script>
    <script src="<%= asset_path('localscripts/histogram.js') %>"></script>
    <script src="<%= asset_path('localscripts/scatter.js') %>"></script>
    <script src="<%= asset_path('localscripts/histmini_with_marker.js') %>"></script>
    <script src="<%= asset_path('localscripts/parallel_histograms.js') %>"></script>
    <!-- Load Chart.js Library-->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.8.0/dist/chart.min.js"></script>
    <!-- Load Papa Parse Library-->
    <script src="https://cdn.jsdelivr.net/npm/papaparse@5.3.2/papaparse.min.js"></script>
    <style>
      tr[data-href] {
        cursor: pointer;
      }
      #reload {
        float: right;
      }
    </style>
  </head>
  <body>
    <script>
      $(function () {
          $('[data-toggle="popover"]').popover({sanitize: false})
      });
    </script>
    <%- include('../partials/navbar'); %>
    <div id="content" class="container-fluid">
      <%- include('../partials/assessmentSyncErrorsAndWarnings'); %>


      <p>input form: x% </p>
      <p>threshold slidebar: loose / medium / strict</p>

      <input type = "file" id = "uploadcsv">
      <button type="button" class="btn btn-sm btn-primary" id="uploadconfirm"> Upload CSV</button>
      <button type="button" class="btn btn-sm btn-primary" id="reload">Reload Data</button>
      <hr>
    
      <div class="card mb-4">
        <div class="card-header bg-primary text-white">
          <%= assessment_set.name %> <%= assessment.number %> Overview
        </div>
        <script>
          document.getElementById("reload").addEventListener("click", function() {
            console.log("reload button clicked")
          });
        </script>

        <div class="card-footer">
          <small>
            <ul>
              <li><strong>Number of students:</strong> 200 </li>
              <li><strong>Time span: </strong> Students need to finish the exam within 48 hours during 48 hours. </li>
              <li><strong>Exam questions: </strong> a total of 15 questions are shuffled and with multiple variants.
            </li></ul>
          </small>

        </div>
      </div>
      <script>
        var button = document.getElementById("uploadcsv");
        var rect = button.getBoundingClientRect();
        console.log(rect.top, rect.right, rect.bottom, rect.left);
      </script>

  
        <script>
          let overall_data = {
            "0-0.1": 0, "0.1-0.2": 0, "0.2-0.3": 0, "0.3-0.4": 0, "0.4-0.5": 0, 
            "0.5-0.6": 0, "0.6-0.7": 0, "0.7-0.8": 0, "0.8-0.9": 0, "0.9-1": 0 };
          let time_data = {...overall_data};
          let answer_data = {...overall_data};
          let order_data = {...overall_data};
          let wrong_answer_data = {...overall_data};
          let score_data = {...overall_data};
           let group_count = {
          "0-0.1":0, 
          "0.1-0.2":0, 
          "0.2-0.3":0, 
          "0.3-0.4":0, 
          "0.4-0.5":0, 
          "0.5-0.6":0, 
          "0.6-0.7":0, 
          "0.7-0.8":0,
          "0.8-0.9":0, 
          "0.9-1":0
          };
         
          //const csv = await fetch('pages/instructorAssessmentCheatDetection/cheat-detection-py/result.csv');
          //const data = await csv.text();
          function readWriteData(results, ruleData) {
            let dict = {};
            let score = null;
            if (ruleData === 'overall_prob') { dict = overall_data; }
            else if (ruleData === 'rule1_prob') { dict = time_data; }
            else if (ruleData === 'rule2_prob') { dict = answer_data; }
            else if (ruleData === 'rule3_prob') { dict = order_data; }
            else if (ruleData === 'rule4_prob') { dict = wrong_answer_data; }
            else if (ruleData === 'rule5_prob') { dict = score_data; }
            for (i = 0; i < results.data.length; i++) {
              if (ruleData === 'overall_prob') { score = results.data[i].overall_prob; }
              else if (ruleData === 'rule1_prob') { score = results.data[i].rule1_prob; }
              else if (ruleData === 'rule2_prob') { score = results.data[i].rule2_prob; }
              else if (ruleData === 'rule3_prob') { score = results.data[i].rule3_prob; }
              else if (ruleData === 'rule4_prob') { score = results.data[i].rule4_prob; }
              else if (ruleData === 'rule5_prob') { score = results.data[i].rule5_prob; }
              if (score <= 0.1)
                dict["0-0.1"] += 1;
              else if (0.1 < score <= 0.2)
                dict["0.1-0.2"] += 1;
              else if (0.2 < score <= 0.3)
                dict["0.2-0.3"] += 1;
              else if (0.3 < score <= 0.4)
                dict["0.3-0.4"] += 1;
              else if (0.4 < score <= 0.5)
                dict["0.4-0.5"] += 1;
              else if (0.5 < score <= 0.6)
                dict["0.5-0.6"] += 1;
              else if (0.6 < score <= 0.7)
                dict["0.6-0.7"] += 1;
              else if (0.7 < score <= 0.8)
                dict["0.7-0.8"] += 1;
              else if (0.8 < score <= 0.9)
                dict["0.8-0.9"] += 1;
              else
                dict["0.9-1"] += 1;
              
            }
            if (ruleData === 'overall_prob') { overall_data = dict; }
            else if (ruleData === 'rule1_prob') { time_data = dict; }
            else if (ruleData === 'rule2_prob') { answer_data = dict; }
            else if (ruleData === 'rule3_prob') { order_data = dict; }
            else if (ruleData === 'rule4_prob') { wrong_answer_data = dict; }
            else if (ruleData === 'rule5_prob') { score_data = dict; }
            
          }
          const uploadcsv = document.getElementById('uploadconfirm')
            .addEventListener('click', () => {
              //Parsing
              Papa.parse(document.getElementById('uploadcsv').files[0], {
                download: true,
                header: true,
                skipEmptyLines: true,
                
                complete : function(results) {
                  readWriteData(results, 'overall_prob');
                  readWriteData(results, 'rule1_prob', time_data);
                  readWriteData(results, 'rule2_prob', answer_data);
                  readWriteData(results, 'rule3_prob', order_data);
                  readWriteData(results, 'rule4_prob', wrong_answer_data);
                  readWriteData(results, 'rule5_prob', score_data);
                  updateTable(results.data);
                  updateDetailedReport(results.data);
                  }
              });
            });
            
          //Setup Block
          const data = {
            labels: Object.keys(group_count),
            datasets: [{
                label: "Overall Similarity",
                data: Object.values(group_count),
                // xAxisID: "x",
                //Blue Bars
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 0.6)',
                borderWidth: 1,
                hoverBorderWidth: 2,
                hoverBorderColor: 'rgba(54, 162, 235, 1)'
            }]
          };
          //Config Block
          const config = {
            type: 'bar',
            data: data,
            options: {
              scales: {
                y : {
                  // type: 'linear',
                  text: 'Frequency',
                  grace: '10%'
                },
                
              }
            }
          };
          
          //Init Render Block
          const myChart = new Chart(
            document.getElementById('chart'),
            config
          );
          
          function updateChart(rule) {
            myChart.data.datasets[0].label = "Number of pairs within the bin";
            //set display data to data pertaining to rule
            if (rule === 'overall_prob') {
              for(const key in overall_data) {
              group_count[key] = overall_data[key]
              }
            }
            else if (rule === 'rule1_prob') {
              for(const key in time_data) {
              group_count[key] = time_data[key]
              }
            }
            else if (rule === 'rule2_prob') {
              for(const key in answer_data) {
              group_count[key] = answer_data[key]
              }
            }
            else if (rule === 'rule3_prob') {
              for(const key in order_data) {
              group_count[key] = order_data[key]
              }
            }
            else if (rule === 'rule4_prob') {
              for(const key in wrong_answer_data) {
              group_count[key] = wrong_answer_data[key]
              }
            }
            else if (rule === 'rule5_prob') {
              for(const key in score_data) {
              group_count[key] = score_data[key]
              }
            }
            console.log(Object.values(group_count));
            myChart.data.datasets[0].data = Object.values(group_count);
          
            myChart.update();

          };

          function updateTable(data) {

            // get html element
            let table_body = $("tbody#table-body");

            // append rows
            //<a href="<%= urlPrefix %>/cheat_detection_pair/">cheat_detection_pair</a>
            for (let i=0; i<5; i++) {
              console.log("<%= urlPrefix %>")
              console.log("hello")

              let tr = $("<tr role=\"row\" class=\"even\" data-href=\"" +window.location.href+ "_pair?data1=" + data[i].student1 + "&data2=" + data[i].student2 + "\"></tr>");  // localhost:3000/cheat_detection_pair             localhost:3000/pl/.....
              tr.append($("<td>"+(i+1)+"</td>"));
              tr.append($("<td>"+"100%"+"</td>")); 
              tr.append($("<td>"+data[i].student1+"</td>"));
              tr.append($("<td>"+data[i].student2+"</td>"));
              highlightSimilarityScore(data[i].rule1_prob, tr)
              highlightSimilarityScore(data[i].rule2_prob, tr)
              highlightSimilarityScore(data[i].rule3_prob, tr)
              highlightSimilarityScore(data[i].rule4_prob, tr)
              highlightSimilarityScore(data[i].rule4_prob, tr)
              table_body.append(tr);

              tr.on("click", function() {
                let url = $(this).attr("data-href");

                $.ajax({
                  url: url,
                  method: "GET",
                  success: function(response) {
                    let newWindow = window.open();
                    newWindow.document.write(response);

                  },
                  error: function(error) {
                    console.error("Failed to load details page: " + error);
                  }
                });
              });
            }              
          }
          function highlightSimilarityScore(score, tr) {
            if (score<0.8) 
              return tr.append($("<td>"+parseFloat(score).toFixed(2)+"</td>"));
            else
              return tr.append($("<td style=background:#fb8072>"+parseFloat(score).toFixed(2)+"</td>"));
          }

          function updateDetailedReport(data) {
            console.log("data");
            console.log(data);

            // get html element
            let table_body = $("tbody#all-rules-details");
            // append rows
          }

          function setPersonalAccessToken(event) {
            personalAccessToken = document.getElementById("PAT").value;
            console.log(personalAccessToken);
          }
          // document.getElementById("submitPersonalAccessToken").addEventListener("click", setPersonalAccessToken, false);
        </script>
      <!-- </div>
      </div> -->
      
      <!-- suspicious student table -->
      <div class="card mb-4">
        <div class="card-header bg-primary text-white">
          Detected Pairs
        </div>

        <div class="table-responsive">
          
          <table role="grid" class="table table-sm table-hover table-striped tablesorter tablesorter-bootstrap tablesorter1baf7fd6a9a23 table-bordered">
            <thead>
              <tr role="row" class="tablesorter-headerRow">
                <th class="align-middle text-nowrap" data-field=""><div class="th-inner sortable both desc"></div><div class="fht-cell"></div></th>
                

                <th data-column="1" class="tablesorter-header bootstrap-header tablesorter-headerUnSorted" tabindex="0" scope="col" role="columnheader" aria-disabled="false" unselectable="on" aria-sort="none" aria-label="uid: No sort applied, activate to apply an ascending sort" style="user-select: none;">
                  <div class="tablesorter-wrapper" style="position:relative;height:100%;width:100%">
                    <div class="tablesorter-header-inner">
                      Confidence 
                      <i class="tablesorter-icon bootstrap-icon-unsorted"></i>
                    </div>
                  </div>
                </th>

                <th data-column="1" class="tablesorter-header bootstrap-header tablesorter-headerUnSorted" tabindex="0" scope="col" role="columnheader" aria-disabled="false" unselectable="on" aria-sort="none" aria-label="uid: No sort applied, activate to apply an ascending sort" style="user-select: none;">
                  <div class="tablesorter-wrapper" style="position:relative;height:100%;width:100%">
                    <div class="tablesorter-header-inner">
                      Student 1
                      <i class="tablesorter-icon bootstrap-icon-unsorted"></i>
                    </div>
                  </div>
                </th>

                <th data-column="1" class="tablesorter-header bootstrap-header tablesorter-headerUnSorted" tabindex="0" scope="col" role="columnheader" aria-disabled="false" unselectable="on" aria-sort="none" aria-label="uid: No sort applied, activate to apply an ascending sort" style="user-select: none;">
                  <div class="tablesorter-wrapper" style="position:relative;height:100%;width:100%">
                    <div class="tablesorter-header-inner">
                      Student 2 
                      <i class="tablesorter-icon bootstrap-icon-unsorted"></i>
                    </div>
                  </div>
                </th>

                <th class="text-center align-middle text-nowrap" data-field="Rule1 Probability">
                  <div class="th-inner sortable both desc">Rule1 Probability
                    <button class="btn btn-xs" type="button" title="Show roles help" data-toggle="modal" data-target="#role-help">
                      <i class="bi-question-circle-fill" aria-hidden="true"></i>
                    </button>
                  </div>
                  <div class="fht-cell"></div>
                </th>

                <th class="text-center align-middle text-nowrap" data-field="Rule2 Probability"><div class="th-inner sortable both desc">Rule2 Probability
                  <button class="btn btn-xs" type="button" title="Show roles help" data-toggle="modal" data-target="#role-help">
                    <i class="bi-question-circle-fill" aria-hidden="true"></i>
                  </button>
                </div><div class="fht-cell"></div></th>

                <th class="text-center align-middle text-nowrap" data-field="Rule3 Probability"><div class="th-inner sortable both desc">Rule3 Probability
                  <button class="btn btn-xs" type="button" title="Show roles help" data-toggle="modal" data-target="#role-help">
                    <i class="bi-question-circle-fill" aria-hidden="true"></i>
                  </button>
                </div><div class="fht-cell"></div></th>

                <th class="text-center align-middle text-nowrap" data-field="Rule4 Probability"><div class="th-inner sortable both desc">Rule4 Probability
                  <button class="btn btn-xs" type="button" title="Show roles help" data-toggle="modal" data-target="#role-help">
                    <i class="bi-question-circle-fill" aria-hidden="true"></i>
                  </button>
                </div><div class="fht-cell"></div></th>

                <th class="text-center align-middle text-nowrap" data-field="Rule5 Probability"><div class="th-inner sortable both desc">Rule5 Probability
                  <button class="btn btn-xs" type="button" title="Show roles help" data-toggle="modal" data-target="#role-help">
                    <i class="bi-question-circle-fill" aria-hidden="true"></i>
                  </button>
                </div><div class="fht-cell"></div></th>


              </tr>
            </thead>
            <tbody id="table-body"></tbody>
          </table>
          <script>
            $(document).ready(function () {
              $(document.body).on("click", "tr[data-href]", function () {
                window.location.href = this.dataset.href;
              });
            });
          </script>

          <div class="modal fade" id="role-help" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-lg" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <h4 class="modal-title" id="role-help-title">Rules</h4>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <ul>
                    <li><strong>Rule 1</strong> (same time rule) checks the similarity between two students' question-answering time.</li>
                    <li><strong>Rule 2</strong> (same answer rule) checks the similarity between two students' answer.</li>
                    <li><strong>Rule 3</strong> (same order rule) checks the similarity between two students' question-answering order.</li>
                    <li><strong>Rule 4</strong> (same wrong answer rule) checks the similarity between two students' wrong answer.</li>
                    <li><strong>Rule 5</strong> (same score rule) checks the similarity between two students' score distribution.</li>
                    <!-- <li><strong>Overall Probability</strong> checks .</li> -->
                  </ul>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <p>Pair Details Page</p>
      <!-- pair detail on all rules -->
      <div class="card mb-4">
        <div class="card-header bg-primary text-white">
          Detailed Report on All Rules
        </div>

        <div class="table-responsive">
          <table class="table table-sm table-hover">
            <thead>
              <tr>
                <th class="text-center"></th>
                <th class="text-center">Similarity Score</th>
                <th class="text-center">Quintiles</th>
                <th class="text-center">Median Score</th>
              </tr>
            </thead>
            <tbody id="all-rules-details">
              <% questions = [{"number":1, "rule_title":"Rule1", "rule_score":100, "median_score":20}, 
              {"number":1, "rule_title":"Rule2", "rule_score":70, "median_score":30}, 
              {"number":1, "rule_title":"Rule3", "rule_score":50, "median_score":40}, 
              {"number":1, "rule_title":"Rule4", "rule_score":40, "median_score":50}, 
              {"number":1, "rule_title":"Rule5", "rule_score":90, "median_score":10}, ]%>
              <% questions.forEach(function(row, i) { %>
                <tr>
                  <td><%= row.rule_title %></td>
                  <td class="text-center"><%= row.rule_score %></td>
                  
                  <% if (row.number > 0) { %>
                  <td class="text-center"><div id="scoreHist<%= i %>" class="miniHist"></div></td>
                  <script>
                    $(function() {
                        var data = [10,20,20,40,50,40,40,10,20,20,40,50,59,60,75,34,64,58,23,84,29,56,26,35,100];
                        var options = {
                            width: 60,
                            height: 20,
                            ymax: 100,
                        };
                        histmini_with_marker("#scoreHist<%= i %>", data, <%= row.rule_score%>, options);
                    });
                  </script>
                  <% } else { %>
                  <td class="text-center"></td>
                  <% } %>

                  <td class="text-center"><%= row.median_score %></td>
                  
                </tr>
                <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </body>
</html>