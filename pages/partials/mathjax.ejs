<script>

// default to CHTML because of https://github.com/PrairieLearn/PrairieLearn/pull/3520
// var outputComponent = 'output/chtml';

// default to SVG again: Windows+Chrome was the primary case where the CHTML
// mode was active, but now thin lines are disappearing on that platform too.
var outputComponent = 'output/svg';

// This section may be redundant when 'output/svg' is the default anyway, but
// it may be useful for reference.
<% if (userAgent && userAgent.engine.name == 'WebKit') { %>
    // workaround for https://github.com/PrairieLearn/PrairieLearn/issues/3540
    outputComponent = 'output/svg';
<% } %>
<% if (typeof questionHtml != 'undefined' && questionHtml.includes('pl-requires-svg-mathjax')) { %>
    outputComponent = 'output/svg';
<% } %>
<% if (userAgent && userAgent.os.name == 'Linux') { %>
    // Workaround for horizontal lines disappearing
    // on Linux. Seems to work in Firefox, Brave,
    // Chromium.
    outputComponent = 'output/svg';
<% } %>

// If the user overrides the renderer with the pop-up menu, reset that
// preference when the page reloads. For now, this is preferable to
// prohibiting the menu choice because it's useful for debugging.
try {
    const settingsKey = 'MathJax-Menu-Settings';
    const settings = JSON.parse(localStorage.getItem(settingsKey)) || {};
    delete settings['renderer'];
    const settingsJson = JSON.stringify(settings);
    if (settingsJson === '{}') {
        localStorage.removeItem(settingsKey);
    } else {
        localStorage.setItem(settingsKey, settingsJson);
    }
} catch(e) { }

var MathJax = {
    tex: {
        inlineMath: [['$', '$'], ['\\(', '\\)']]
    },
    svg: {
        // Using local instead of global prevents a MathJax bug if the user
        // tries to switch the renderer with the pop-up menu. We could prevent
        // switching but it may be useful for debugging.
        fontCache: 'local'
    },
    loader: {
        load: ['input/tex', 'ui/menu', outputComponent]
    },
    // Register a callback to be run when MathJax is loaded, use MathJax.config.onReady().
    readyQueue: [],
    onReady: (cb) => { MathJax.config.readyQueue.push(cb); },
    startup: {
        ready: () => {
            MathJax.startup.defaultReady();
            MathJax.Hub = {
                Queue: function(){
                    console.warn("MathJax.Hub.Queue() has been deprecated in 3.0, please use MathJax.typeset() or MathJax.typesetPromise()");
                    MathJax.typesetPromise();
                }
            };
        },
        pageReady: () => {
            MathJax.startup.defaultPageReady();
            MathJax.config.onReady = cb => cb();
            MathJax.config.readyQueue.forEach(cb => cb());
        }
    }
};
</script>
<script type="text/javascript" id="MathJax-script" src="<%= node_modules_asset_path('mathjax/es5/startup.js') %>"></script>
