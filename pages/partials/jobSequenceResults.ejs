<!--

    If you want live updates, do two things:

    1) Include as:

        include(..., {job_sequence_enable_live_update: true})

    2) Add this line to the header of the host page:

        <script src="<%= node_modules_asset_path('socket.io-client/dist/socket.io.min.js') %>"></script>

    To include this partial more than once (e.g., to display the results of
    more than one job sequence on the same page), just pass 'job_sequence' as
    another local variable on include:

        include(..., {job_sequence: some_job_sequence})

-->

<% if (job_sequence_enable_live_update) { %>
<script>
    $(function() {
        var socket = io();

        socket.on('update', function() {window.location.reload(true);});
        socket.on('change:output', function(msg) {$("#output-" + msg.job_id).html(msg.output);});

        // Join the rooms for the job_sequence and for each individual job.
        // Check return values for a change that happened since we rendered the page
        // and reload if anything changed. This avoids the race condition where
        // jobs change between page render and socket activation.

        socket.emit('joinJobSequence', {job_sequence_id: <%= job_sequence.id %>}, function(msg) {
            if (msg.job_count != '<%= job_sequence.job_count %>') {window.location.reload(true);}
        });

        <% job_sequence.jobs.forEach(function(job) { %>
        socket.emit('joinJob', {job_id: <%= job.id %>}, function(msg) {
            if (msg.status != '<%= job.status %>') {
                window.location.reload(true)
            }
            $("#output-" + <%= job.id %>).html(msg.output);
        });
        <% }); %>

    });
</script>
<% } %>

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <%= job_sequence.description %> #<%= job_sequence.number %>
    </div>

    <% job_sequence.jobs.forEach(function(job) { %>
    <div class="list-group">
        <li class="list-group-item">
            <h4 class="list-group-item-heading">Stage <%= job.number_in_sequence %>: <%= job.description %></h4>
            <% if (job.command) { %>
            <p class="mb-1">
                Command <code><%= job.command %><% job.arguments.forEach(function(arg) { %> <%= arg %><% }); %></code>
                <% if (job.working_directory) { %> run in <code><%= job.working_directory %></code><% } %>
            </p>
            <% } %>
            <p class="mb-1">
                Started at <%= job.start_date_formatted %><% if (job_sequence.user_uid) { %> by <%= job_sequence.user_uid %><% } %><% if (job_sequence.authn_user_uid != job_sequence.user_uid) { %> (really <%= job_sequence.authn_user_uid %>)<% } %><% if (job.finish_date_formatted) { %>, finished at <%= job.finish_date_formatted %><% } %>
            </p>
            <p class="mb-1">
                <%- include('../partials/jobStatus', {status: job.status}); %>
                <% if (job.status == 'Running') { %><i class="fa fa-sync fa-spin fa-fw"></i><% } %>
            </p>
            <% if (job.status == 'Error' && job.exit_code != null) { %><p class="mb-1">Exit code: <%= job.exit_code %></p><% } %>
            <% if (job.exit_signal != null) { %><p class="mb-1">Exit signal: <%= job.exit_signal %></p><% } %>
            <% if (job.error_message != null) { %><p class="mb-1">Error message: <%= job.error_message %></p><% } %>
            <pre id="output-<%= job.id %>" class="text-white rounded p-3 mb-0 mt-3" style="background-color: black;"><%- job.output %></pre>
        </li>
    </div>
    <% }); %>
</div>
