<%
/*********************************************************************

This code makes a countdown timer to a fixed final time. We assume
that the server and client clocks are not synchronized, so we only use
time differentials to relate server to client times. The key event
times are:

Server time:        process                       countdownEnd
                       |                                |
Real time: ------------|----d1----|----d2----|----d3----|------
                                  |          |
Client time:                clientStart     now

process:      server time during response processing
clientStart:  client time as soon as possible after processStart
now:          client time when the countdown is rendered
countdownEnd: server time when the timer should expire
d1, d2, d3:   time intervals between real event times

To find clientStart we use either
window.performance.timing.responseStart if available, or otherwise the
current client time when the JS below first executes during page
render.

We want a tight upper bound on d3 = (countdownEnd - now), and we want
to calculate it only using time differentials computed either purely
with server times or purely with client times.

Observe that:
countdownEnd - process = d1 + d2 + d3
                       < d2 + d3

Thus:
d3 > (countdownEnd - process) - (now - clientStart)

This bound is fairly tight if d1 is small.

We assume that we have been passed the value of (countdownEnd -
process) in milliseconds as the variable "serverRemainingMS".

*********************************************************************/
%>

<form name="time-limit-finish-form" method="POST">
  <input type="hidden" name="__action" value="timeLimitFinish">
  <input type="hidden" name="__csrf_token" value="<%= __csrf_token %>">
</form>

<script>
  window.allowQuestionUnload = false;
  var clientStart;
  if (window.performance && window.performance.timing && window.performance.timing.responseStart) {
      clientStart = window.performance.timing.responseStart;
  } else {
      clientStart = Date.now();
  }
  var countdownDisplay = $('<%= displaySelector %>');
  var countdownProgress = $('<%= progressSelector %>');
  countdownProgress.addClass('progress');
  countdownProgress.html('<div class="progress-bar progress-bar-primary"></div>');
  countdownProgressBar = countdownProgress.children('div');

  var displayCountdown = function() {
      var remainingMS = Math.max(0, <%= serverRemainingMS %> - (Date.now() - clientStart));
      var remainingSec = Math.floor(remainingMS / 1000);
      var remainingMin = Math.floor(remainingSec / 60);
      var perc = 100 - Math.max(0, Math.min(100, remainingMS / <%= serverTimeLimitMS %> * 100));
      countdownProgressBar.css('width', perc + '%');
      if (remainingSec >= 180) {
          countdownDisplay.text(remainingMin + ' min');
          countdownProgressBar.attr('class', 'progress-bar bg-primary');
      } else if (remainingSec >= 60) {
          countdownDisplay.text(remainingMin + ' min');
          countdownProgressBar.attr('class', 'progress-bar bg-warning');
      } else {
          countdownDisplay.text(remainingSec + ' sec');
          countdownProgressBar.attr('class', 'progress-bar bg-danger');
      }

      if (remainingMS > 500) {
          // reschedule for the next half-second time
          window.setTimeout(displayCountdown, (remainingMS - 500) % 1000);
      } else {
          // do not trigger unsaved warning dialog
          window.allowQuestionUnload = true;
          document.forms['time-limit-finish-form'].submit();
      }
  };
  displayCountdown();
</script>
