<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head'); %>
    <script src="<%= node_modules_asset_path('bootstrap-table/dist/bootstrap-table.min.js') %>"></script>
    <script src="<%= node_modules_asset_path('bootstrap-table/dist/extensions/sticky-header/bootstrap-table-sticky-header.min.js') %>"></script>
    <script src="<%= node_modules_asset_path('bootstrap-table/dist/extensions/auto-refresh/bootstrap-table-auto-refresh.js') %>"></script>
    <script src="<%= node_modules_asset_path('bootstrap-table/dist/extensions/filter-control/bootstrap-table-filter-control.min.js') %>"></script>
    <link href="<%= node_modules_asset_path('bootstrap-table/dist/bootstrap-table.min.css') %>" rel="stylesheet" />
    <link href="<%= node_modules_asset_path('bootstrap-table/dist/extensions/sticky-header/bootstrap-table-sticky-header.min.css') %>" rel="stylesheet" />
    <link href="<%= node_modules_asset_path('bootstrap-table/dist/extensions/filter-control/bootstrap-table-filter-control.min.css') %>" rel="stylesheet" />
  </head>
  <body>
    <script>
      $(function () {
          window.bsTable = $('#grading-table').bootstrapTable({
              classes: 'table table-sm table-bordered',
              url: '<%= urlPrefix %>/assessment/<%= assessment.id %>/assessment_question/<%= assessment_question_id %>/manual_grading/instances.json',
              dataField: 'instance_questions',
              escape: true,
              uniqueId: 'id',
              idField: 'id',
              selectItemName: 'instance_question_id',
              showButtonText: true,
              showColumns: false,
              showRefresh: true,
              autoRefresh: true,
              autoRefreshStatus: false,
              autoRefreshInterval: 30,
              buttonsOrder: ['refresh', 'autoRefresh'],
              theadClasses: 'thead-light',
              stickyHeader: true,
              filterControl: true,
              rowStyle: row => (row.requires_manual_grading ? {} : { classes: 'text-muted bg-light' }),
              onRefresh: () => {
                  // a bug in bootstrap-table causes the filters to lose value on refresh
                  // (https://github.com/wenzhixin/bootstrap-table/issues/6030).
                  // This code saves the value of all filters to be reloaded once filter controls are re-created.
                  window.savedFilterValues = {};
                  $('#grading-table .filter-control').find('input, select').each(function() {
                      const field_name = $(this).parents('[data-field]:first').data('field');
                      window.savedFilterValues[field_name] = $(this).val();
                  });
              },
              onSearch: () => {
                  if (window.savedFilterValues) {
                      for (const [field, value] of Object.entries(window.savedFilterValues)) {
                          $(`#grading-table th[data-field=${field}]`).find('input, select').val(value);
                      }
                      window.savedFilterValues = false;
                  }
              },
              onPostBody: () => {
                  $('#grading-table [data-toggle="popover"]').popover({
                      sanitize: false,
                      content: function() {
                          let that = this;
                          let dataContent = $($(this).data('base-content'));
                          dataContent.submit(function(e) {
                              e.preventDefault();
                              $.post($(this).attr('action'), $(this).serialize(), function(data) {
                                  $('#grading-table').bootstrapTable('refresh');
                              }); // , 'json');
                              $(that).popover('hide');
                          });
                          return dataContent;
                      },
                  });
                  $('#grading-table th[data-field="points"] .filter-control input').tooltip({
                      title: 'hint: use <code>&lt;<%= Math.ceil(max_points / 2) %></code>, or <code>&gt;0</code>',
                      html: true,
                  });
                  $('#grading-table th[data-field="score_perc"] .filter-control input').tooltip({
                      title: 'hint: use <code>&lt;50</code>, or <code>&gt;0</code>',
                      html: true,
                  });
              },
              columns: [[
                  {
                      checkbox: true,
                  },
                  {
                      field: 'user_or_group_name',
                      title: '<%= assessment.group_work ? 'Group Name' : 'Name' %>',
                      searchable: true,
                      filterControl: 'input',
                      searchFormatter: false,
                      sortable: true,
                      formatter: (value, row) => `<a href="<%= urlPrefix %>/instance_question/${row.id}/manual_grading">${value}</a>`,
                  },
                  {
                      field: 'uid',
                      title: 'UID',
                      searchable: true,
                      filterControl: 'input',
                      sortable: true,
                      visible: <%= !assessment.group_work %>,
                  },
                  {
                      field: 'requires_manual_grading',
                      title: 'Grading status',
                      filterControl: 'select',
                      // filterDefault: 'true',
                      searchFormatter: false,
                      sortable: true,
                      class: 'text-center',
                      formatter: (value, row) => row.requires_manual_grading ? 'Requires grading' : 'Graded',
                  },
                  {
                      field: 'assigned_grader',
                      title: 'Assigned grader',
                      filterControl: 'select',
                      searchFormatter: false,
                      class: 'text-center',
                      formatter: (value, row) => row.assigned_grader ? row.assigned_grader_name : '&mdash;',
                  },
                  {
                      field: 'points',
                      title: 'Awarded points',
                      class: 'text-center',
                      filterControl: 'input',
                      searchFormatter: false,
                      sortable: true,
                      formatter: pointsFormatter,
                  },
                  {
                      field: 'score_perc',
                      title: 'Percentage score',
                      class: 'text-center align-middle text-nowrap',
                      filterControl: 'input',
                      searchFormatter: false,
                      sortable: true,
                      formatter: scorebarFormatter,
                  },
                  {
                      field: 'last_grader',
                      title: 'Graded by',
                      filterControl: 'select',
                      searchFormatter: false,
                      formatter: (value, row) => row.last_grader ? row.last_grader_name : '&mdash;',
                  },
              ]],
          });
      });

      //<% include('../partials/pointsFormatter'); %>
      window.getStringFromFloat = <%- getStringFromFloat.toString() %>;

      function pointsFormatter(points, row) {
          let text = `${getStringFromFloat(row.points)} <small>/<span class="text-muted"><%= max_points %></span></small> `, button = '';
          //<% if (authz_data.has_course_instance_permission_edit) { %>
          button = `<button type="button" class="btn btn-xs btn-secondary editQuestionPointsButton"
                            id="editQuestionPoints${row.id}" tabindex="0"
                            data-toggle="popover" data-container="body"
                            data-html="true" data-placement="auto" title="Change question points"
                            data-base-content="<%= include('../partials/editQuestionPointsForm',
                                                           {id: 'editQuestionPoints${row.id}',
                                                            instance_question: {id: '${row.id}', assessment_instance_id: '${row.assessment_instance_id}', points: '${row.points}', max_points}}); %>">
                      <i class="fa fa-edit" aria-hidden="true"></i>
                    </button>`;
          //<% } %>
          return text + button;
      }

      function scorebarFormatter(score, row) {

          let bar = '', button = '';
          if (score != null) {
              bar = '<div class="progress bg" style="min-width: 10em; max-width: 20em;">';
              let left = '', right = '';
              if (score >= 50) {
                  left = `${Math.floor(score)}%`;
              } else {
                  right = `${Math.floor(score)}%`;
              }
              bar += `<div class="progress-bar bg-success" style="width: ${Math.floor(Math.min(100, score))}%">${left}</div>`;
              bar += `<div class="progress-bar bg-danger" style="width: ${100 - Math.floor(Math.min(100, score))}%">${right}</div>`;
              bar += '</div>';
          }
          //<% if (authz_data.has_course_instance_permission_edit) { %>
          button = `<button type="button" class="btn btn-xs btn-secondary editQuestionScorePercButton"
                            id="editQuestionScorePerc${row.id}" tabindex="0"
                            data-toggle="popover" data-container="body"
                            data-html="true" data-placement="auto" title="Change question percentage score"
                            data-base-content="<%= include('../partials/editQuestionScorePercForm',
                                                           {id: 'editQuestionScorePerc${row.id}',
                                                            instance_question: {id: '${row.id}', assessment_instance_id: '${row.assessment_instance_id}', score_perc: '${row.score_perc}'}}); %>">
                      <i class="fa fa-edit" aria-hidden="true"></i>
                    </button>`;
          //<% } %>
          return `<div class="d-inline-block align-middle">${bar}</div> ${button}`;
      }
    </script>
    <%- include('../partials/navbar'); %>
    <div id="content" class="container-fluid">
      <a class="btn btn-primary mb-2" href="<%= urlPrefix %>/assessment/<%= assessment.id %>/manual_grading">
        <i class="fas fa-arrow-left"></i>
        Back to <%= assessment_set.name %> <%= assessment.number %> Overview
      </a>
      <%- include('../partials/assessmentSyncErrorsAndWarnings'); %>

      <div class="card mb-4">
        <div class="card-header bg-primary text-white">
          <%= assessment.tid %> / Question <%= number_in_alternative_group %>.
          <%= question_title %>
        </div>
        <table id="grading-table"></table>
      </div>

    </div>
  </body>
</html>
