
# This configuration file is based on the default nginx.conf file included
# with Nginx, which is distributed under the following license, as found at
# the URL: https://nginx.org/LICENSE

# /*
#  * Copyright (C) 2002-2021 Igor Sysoev
#  * Copyright (C) 2011-2021 Nginx, Inc.
#  * All rights reserved.
#  *
#  * Redistribution and use in source and binary forms, with or without
#  * modification, are permitted provided that the following conditions
#  * are met:
#  * 1. Redistributions of source code must retain the above copyright
#  *    notice, this list of conditions and the following disclaimer.
#  * 2. Redistributions in binary form must reproduce the above copyright
#  *    notice, this list of conditions and the following disclaimer in the
#  *    documentation and/or other materials provided with the distribution.
#  *
#  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
#  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
#  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  * SUCH DAMAGE.
#  */

user www-data;
worker_processes auto;
#pid /run/nginx.pid;
pid /var/pl-var/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    # error_log /var/log/nginx/error.log debug;

    ##
    # Gzip Settings
    ##

    gzip on;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # This section was added for PrairieLearn Workspaces. RStudio wants to
    # cycle through a few pages when establishing the no-authentication
    # session. We set a cookie to help make sure http or https is used
    # consistently; this can smooth over issues in local testing. The
    # TRIMMED_BASE_URL variable is dynamically replaced in this file when the
    # container is started.
    server {
        listen 3939;

        client_max_body_size 0;

        location /$TRIMMED_BASE_URL/ {
            set $heaviest_scheme "http";
            if ($cookie_heaviest_scheme = https) {
                set $heaviest_scheme "https";
            }
            if ($http_referer ~ ^https) {
                set $heaviest_scheme "https";
            }

            add_header Set-Cookie "heaviest_scheme=$heaviest_scheme; Path=/; SameSite=strict; HttpOnly";

            proxy_hide_header X-Frame-Options;
            proxy_set_header X-RSC-Request $heaviest_scheme://$host:$server_port$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 20d;
            rewrite ^/$TRIMMED_BASE_URL/(.*)$ /$1 break;
            proxy_pass http://localhost:8787;
            proxy_redirect http://localhost:8787/ $heaviest_scheme://$http_host/$TRIMMED_BASE_URL/;
        }
    }

}
