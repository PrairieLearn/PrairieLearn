on:
  workflow_call:
    inputs:
      base-images:
        description: 'The base images to build'
        required: false
        type: string
        default: ''
      images:
        description: 'The images to build'
        required: true
        type: string

jobs:
  build-images:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]

    runs-on: ${{ matrix.os }}

    env:
      COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      # Secrets aren't accessible for PRs coming from forks, and we also can't
      # check secrets in an `if` conditional, so we check for the presence of
      # the secret here and use this value in conditionals below.
      CAN_PUSH_IMAGE: ${{ secrets.DOCKERHUB_USERNAME != '' }}

    steps:
      - uses: actions/checkout@v4
        with:
          # We need the whole history so we can diff against `master` to determine
          # what images need to be built.
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # https://github.com/marketplace/actions/docker-setup-buildx
        with:
          # This is needed to allow pushing to the local registry running on port 5000.
          driver-opts: network=host
      - name: Login to DockerHub
        if: ${{ env.CAN_PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v3 # https://github.com/marketplace/actions/docker-login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create directory for metadata
        run: mkdir -p ${{ runner.temp }}/workspace-image-metadata

      - name: Build images
        run: python3 scripts/build_images.py
        env:
          BASE_IMAGES: prairielearn/workspace-vscode-base
          IMAGES: prairielearn/workspace-desktop,prairielearn/workspace-jupyterlab,prairielearn/workspace-jupyterlab-python,prairielearn/workspace-rstudio,prairielearn/workspace-xtermjs,prairielearn/workspace-vscode-cpp,prairielearn/workspace-vscode-python
          TAG: ${{ env.COMMIT_SHA }}
          PUSH_IMAGES: ${{ env.CAN_PUSH_IMAGE == 'true' }}
          METADATA_DIR: ${{ runner.temp }}/workspace-image-metadata

      - name: Upload metadata
        uses: actions/upload-artifact@v4
        with:
          name: image-metadata-workspace-${{ matrix.os }}-${{ env.COMMIT_SHA }}
          path: ${{ runner.temp }}/workspace-image-metadata
          retention-days: 1
          overwrite: true

  combine-images:
    needs: [build-images]

    runs-on: ubuntu-22.04

    env:
      # Secrets aren't accessible for PRs coming from forks, and we also can't
      # check secrets in an `if` conditional, so we check for the presence of
      # the secret here and use this value in conditionals below.
      CAN_PUSH_IMAGE: ${{ secrets.DOCKERHUB_USERNAME != '' }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Login to DockerHub
        if: ${{ env.CAN_PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v3 # https://github.com/marketplace/actions/docker-login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download metadata
        if: ${{ env.CAN_PUSH_IMAGE == 'true' }}
        uses: actions/download-artifact@v4
        with:
          pattern: image-metadata-workspace-*-${{ env.COMMIT_SHA }}
          path: ${{ runner.temp }}/workspace-image-metadata
          merge-multiple: true

      - name: Combine images
        if: ${{ env.CAN_PUSH_IMAGE == 'true' }}
        run: python3 scripts/combine_multi_platform_images.py
        env:
          METADATA_DIR: ${{ runner.temp }}/workspace-image-metadata
          TAG: ${{ env.COMMIT_SHA }}
