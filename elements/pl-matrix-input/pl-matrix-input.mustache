{{#question}}
<script>
    $(function() {
        $('#pl-matrix-input-{{uuid}} [data-toggle="popover"]').popover({
            sanitize: false,
            container: 'body',
            template: '<div class="popover pl-matrix-input-popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
        });
    });
</script>
<div id="pl-matrix-input-{{uuid}}" class="input-group">
    {{#label}}
    <span class="input-group-prepend">
        <label class="input-group-text" id="pl-matrix-input-{{uuid}}-label">{{{label}}}</label>
    </span>
    {{/label}}
    <input name="{{name}}" type="text" class="form-control pl-matrix-input-input {{^display_append_span}}rounded-right{{/display_append_span}}" {{^editable}}disabled{{/editable}} {{#raw_submitted_answer}}value="{{raw_submitted_answer}}"{{/raw_submitted_answer}} aria-describedby="pl-matrix-input-{{uuid}}-label" placeholder="{{shortinfo}}" />
    <div class="input-group-append">
        {{#show_info}}
        <a role="button" class="btn btn-light border d-flex align-items-center" data-toggle="popover" data-html="true" title="Matrix" data-content="{{info}}" data-placement="auto" data-trigger="focus" tabindex="0">
        <i class="fa fa-question-circle" aria-hidden="true"></i>
        {{/show_info}}
        {{^show_info}}
        <span class="d-flex align-items-center">
        {{/show_info}}

        {{#correct}}&nbsp;<span class="badge badge-success"><i class="fa fa-check" aria-hidden="true"></i> 100%</span>{{/correct}}
        {{#partial}}&nbsp;<span class="badge badge-warning"><i class="fa fa-circle-o" aria-hidden="true"></i> {{partial}}%</span>{{/partial}}
        {{#incorrect}}&nbsp;<span class="badge badge-danger"><i class="fa fa-times" aria-hidden="true"></i> 0%</span>{{/incorrect}}

        {{#show_info}}
        </a>
        {{/show_info}}
        {{#show_info}}
        </span>
        {{/show_info}}
    </div>
</div>
{{/question}}

{{#submission}}
{{#error}}
        
<script>
    $(function() {
        $('#pl-matrix-input-submission-{{uuid}} [data-toggle="popover"]').popover({
            sanitize: false,
            container: 'body',
            template: '<div class="popover pl-matrix-input-popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
        });
    });
</script>
<span id="pl-matrix-input-submission-{{uuid}}">

{{#parse_error}}
    {{#label}}<span>{{{label}}}</span>{{/label}}
    {{#raw_submitted_answer}}<code class="user-output-invalid">{{raw_submitted_answer}}</code>{{/raw_submitted_answer}}
    
    <span class="badge text-danger badge-invalid"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Invalid</span>
    
    <a href="javascript:void(0);" role="button" class="btn btn-sm btn-secondary small border" data-placement="auto" data-trigger="focus" data-toggle="popover" data-html="true" style="margin-left: 5px" title="Format Error" tabindex="0" data-content="{{parse_error}}"> Why <i class="fa fa-question-circle" aria-hidden="true"></i></a>
{{/parse_error}}
{{#missing_input}}
    {{#label}}<span>{{{label}}}</span>{{/label}}

    <span class="badge text-dark badge-missing-input"><i class="fa fa-question-circle" aria-hidden="true"></i> Missing Input</span>
    
    <a href="javascript:void(0);" role="button" class="btn btn-sm btn-secondary small border" data-placement="auto" data-trigger="focus" data-toggle="popover" data-html="true" style="margin-left: 5px" title="Missing Input" tabindex="0" data-content="There is no submitted value for this field.  This may have happened because the question was changed by course staff after the answer was submitted."> Why <i class="fa fa-question-circle" aria-hidden="true"></i>
    </a>
{{/missing_input}}

</span>

{{/error}}
{{^error}}
{{#label}}<span>{{{label}}}</span>{{/label}}
<code class="user-output">{{a_sub}}</code>
{{#correct}}<span class="badge badge-success"><i class="fa fa-check" aria-hidden="true"></i> 100%</span>{{/correct}}
{{#partial}}<span class="badge badge-warning"><i class="fa fa-circle-o" aria-hidden="true"></i> {{partial}}%</span>{{/partial}}
{{#incorrect}}<span class="badge badge-danger"><i class="fa fa-times" aria-hidden="true"></i> 0%</span>{{/incorrect}}
{{/error}}
{{/submission}}

{{#answer}}
<script>
    $(function() {
        PrairieUtil.initCopyButton('#pl-matrix-input-answer-{{uuid}} .copy-button');
    });
</script>

<div id="pl-matrix-input-answer-{{uuid}}" class="card mb-4 pl-matrix-input-answer ">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs" role="tablist">
            <li class="nav-item" role="presentation"><a class="nav-link{{#default_is_matlab}} active{{/default_is_matlab}}" href="#matlab-{{uuid}}" aria-controls="matlab-{{uuid}}" role="tab" data-toggle="pill">matlab</a></li>
            <li class="nav-item" role="presentation"><a class="nav-link{{#default_is_python}} active{{/default_is_python}}" href="#python-{{uuid}}" aria-controls="python-{{uuid}}" role="tab" data-toggle="pill">python</a></li>
        </ul>
    </div>
    <div class="card-body">
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane {{#default_is_matlab}}active{{/default_is_matlab}}" id="matlab-{{uuid}}">
                <p>
                    {{#label}}<span>{{{label}}}</span>{{/label}}
                    <code class="user-output" id="matlab-data-{{uuid}}">{{matlab_data}}</code>
                </p>
                <button type="button" class="btn btn-secondary btn-sm copy-button" data-clipboard-target="#matlab-data-{{uuid}}">
                    copy this answer
                </button>
            </div>
            <div role="tabpanel" class="tab-pane {{#default_is_python}}active{{/default_is_python}}" id="python-{{uuid}}">
                <p>
                    {{#label}}<span>{{{label}}}</span>{{/label}}
                    <code class="user-output" id="python-data-{{uuid}}">{{python_data}}</code>
                </p>
                <button type="button" class="btn btn-secondary btn-sm copy-button" data-clipboard-target="#python-data-{{uuid}}">
                    copy this answer
                </button>
            </div>
        </div>
    </div>
</div>
{{/answer}}

{{#format}}
<p>
Your answer must be a matrix (i.e., a 2D array). It can be expressed in one of two ways:
</p>
<ul>
    <li><strong>Matlab Format.</strong> Enclose it by a single pair of square brackets. Separate entries in each row with a space or comma. Indicate the end of each intermediate row with a semicolon. Examples: <code>[1 2 3; 4 5 6]</code> or <code>[1, 2, 3; 4, 5, 6]</code></li>
    <li><strong>Python Format.</strong> Enclose it by a single pair of square brackets. Enclose each row by a single pair of square brackets. Separate rows with a comma. Separate entries in each row with a comma. Example: <code>[[1, 2, 3], [4, 5, 6]]</code></li>
</ul>
<p>
    Note that <code>[1, 2, 3]</code> is valid Matlab input for a 1&times;3 matrix (a row vector). If you want a column vector (a 3&times;1 matrix) then you should enter <code>[1; 2; 3]</code> or <code>[[1], [2], [3]]</code>.
</p>
<p>
{{#allow_complex}}
Each entry must be either a real number between <code>-1e308</code> and <code>1e308</code> or a complex number with both real and imaginary parts between <code>-1e308</code> and <code>1e308</code> (i.e., it must be interpretable as a double-precision real or complex number). Complex numbers must use either <code>i</code> or <code>j</code> as the imaginary unit, must place the imaginary unit after the imaginary part (e.g., <code>2j</code> not <code>j2</code>), must write the imaginary part even when <code>1</code> or <code>-1</code> (e.g., <code>1j</code> not <code>j</code>), and must write the real part before the imaginary part (e.g., <code>1+2j</code> not <code>2j+1</code>). Standard python print format is accepted for complex numbers (e.g., <code>(1+2j)</code>).
{{/allow_complex}}
{{^allow_complex}}
Each entry must be a real number between <code>-1e308</code> and <code>1e308</code> (i.e., it must be interpretable as a double-precision floating-point number).
{{/allow_complex}}
No symbolic expressions (those that involve fractions, square roots, variables, etc.) will be accepted. Scientific notation is accepted (e.g., <code>1.2e03</code>).
</p>
<p>
{{#relabs}}Numbers must be accurate to within relative tolerance <code>{{rtol}}</code> and absolute tolerance <code>{{atol}}</code>.{{/relabs}}
{{#sigfig}}Numbers must be accurate to {{digits}} significant figures. This means (for example) that if the true answer is <code>1.234</code>, then the submitted answer must be between <code>1.234 - {{comparison_eps}}</code> and <code>1.234 + {{comparison_eps}}</code> to be counted correct.{{/sigfig}}
{{#decdig}}Numbers must be accurate to {{digits}} digits after the decimal. This means (for example) that if the true answer is <code>1.234</code>, then the submitted answer must be between <code>1.234 - {{comparison_eps}}</code> and <code>1.234 + {{comparison_eps}}</code> to be counted correct.{{/decdig}}
</p>
{{/format}}

{{#shortformat}}
matrix {{#relabs}}(rtol={{rtol}}, atol={{atol}}){{/relabs}}{{#sigfig}}({{digits}} significant figures){{/sigfig}}{{#decdig}}({{digits}} digits after decimal){{/decdig}}
{{/shortformat}}


{{#format_error}}
    <p>
        {{{format_error_message}}}
    </p>
    <p>
        Answers should be submitted in Matlab or Python array format.
    </p>
    <p>
        Example <i>valid</i> inputs:
    </p>
    <p>
        <code class="user-output">[[0.40, -0.60], [-0.20, -0.50]]</code>
    </p>
    <p>
        <code class="user-output">[0.40 -0.60; -0.20 -0.50]</code>
    </p>
    <hr>
    <small>
    <p>
      Your answer must be a matrix (i.e., a 2D array). It can be expressed in one of two ways:
    </p>
    <p> <strong>Matlab Format:</strong> Enclose it by a single pair of square brackets. Separate entries in each row with a space or comma. Indicate the end of each intermediate row with a semicolon. <br> Examples: <code class="user-output small">[1 2 3; 4 5 6]</code> or <code class="user-output small">[1, 2, 3; 4, 5, 6]</code> </p>
    <p> <strong>Python Format:</strong> Enclose it by a single pair of square brackets. Enclose each row by a single pair of square brackets. Separate rows with a comma. Separate entries in each row with a comma. <br> Example: <code class="user-output small">[[1, 2, 3], [4, 5, 6]]</code> </p>
    <p> Each entry of the submitted answer must be formatted as a <i>double-precision floating-point</i> {{#complex}}or complex{{/complex}} number.  These numbers {{#complex}}(both real and complex parts){{/complex}} lie roughly in the range of -1.79 &times; 10<sup>308</sup> to 1.79 &times; 10<sup>308</sup>. </p>
    </small>
{{/format_error}}
