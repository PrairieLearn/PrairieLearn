columns
    course_instance_id: bigint not null
    created_at: timestamp with time zone default CURRENT_TIMESTAMP
    id: bigint not null default nextval('enrollments_id_seq'::regclass)
    lti_synced: boolean not null default false
    pending_uid: text
    status: enum_enrollment_status not null default 'joined'::enum_enrollment_status
    user_id: bigint

indexes
    enrollments_pkey: PRIMARY KEY (id) USING btree (id)
    enrollments_pending_uid_course_instance_id_idx: UNIQUE USING btree (pending_uid, course_instance_id)
    enrollments_user_id_course_instance_id_idx: UNIQUE USING btree (user_id, course_instance_id)
    enrollments_user_id_course_instance_id_key: UNIQUE (user_id, course_instance_id) USING btree (user_id, course_instance_id)
    enrollments_course_instance_id_idx: USING btree (course_instance_id)

check constraints
    enrollments_exactly_one_null_user_id_pending_uid: CHECK (user_id IS NULL AND pending_uid IS NOT NULL OR user_id IS NOT NULL AND pending_uid IS NULL)
    enrollments_impossible_synced: CHECK (NOT ((status = ANY (ARRAY['invited'::enum_enrollment_status, 'rejected'::enum_enrollment_status, 'blocked'::enum_enrollment_status])) AND lti_synced))
    enrollments_user_id_null_only_if_invited: CHECK ((user_id IS NULL) = (status = 'invited'::enum_enrollment_status))

foreign-key constraints
    enrollments_course_instance_id_fkey: FOREIGN KEY (course_instance_id) REFERENCES course_instances(id) ON UPDATE CASCADE ON DELETE CASCADE
    enrollments_user_id_fkey: FOREIGN KEY (user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE
