#!/usr/bin/env node
// @ts-check

const ERR = require('async-stacktrace');

const databaseDiff = require('../lib/databaseDiff');

const yargs = require('yargs')
  .usage('Usage: $0 [options]')
  .describe('db', 'reads a description from the named database')
  .describe('dir', "read a description from a directory that's been generated by `pg-describe.js`")
  .help('h')
  .alias('h', 'help')
  .example(
    '$0 --db postgres --dir db_dump',
    'Diffs the database "postgres" with the description in the direcotry "db_dump"'
  )
  .example(
    '$0 --db postgres --db old_restore',
    'Diffs the database "postgres" with the database "old_restore"'
  )
  .strict();

const args = yargs.argv;

const options = {
  outputFormat: 'string',
  coloredOutput: process.stdout.isTTY,
};

if (args.db && !Array.isArray(args.db) && args.dir && !Array.isArray(args.dir)) {
  // Ensure correct ordering for the sake of diffs
  if (process.argv.indexOf('--db') < process.argv.indexOf('--dir')) {
    databaseDiff.diffDatabaseAndDirectory(args.db, args.dir, options, handleResults);
  } else {
    databaseDiff.diffDirectoryAndDatabase(args.dir, args.db, options, handleResults);
  }
} else if (args.db && Array.isArray(args.db) && args.db.length === 2 && !args.dir) {
  databaseDiff.diffDatabases(args.db[0], args.db[1], options, handleResults);
} else if (args.dir && Array.isArray(args.dir) && args.dir.length === 2 && !args.db) {
  databaseDiff.diffDirectories(args.dir[0], args.dir[1], options, handleResults);
} else {
  yargs.showHelp();
  process.exit(1);
}

function handleResults(err, results) {
  if (ERR(err, (err) => console.log(err))) process.exit(1);
  process.stdout.write(results);
  process.exit(0);
}
