[tool.ruff]
include = [
    "**/*.py",
]

exclude = [
    # These files are intentionally not parseable as Python.
    "./exampleCourse/questions/demo/autograder/codeUpload/submitted_code_samples/fib_error_binary_file/fib.py",
    "./exampleCourse/questions/demo/autograder/codeUpload/submitted_code_samples/fib_error_large_text_file/fib.py",
    # Files related to the Python autograder will often intentionally appear
    # broken in isolation. We'll exclude these files from linting.
    "exampleCourse/questions/**/tests/initial_code.py",
    "exampleCourse/questions/**/tests/trailing_code.py",
]
target-version = "py310"

[tool.ruff.lint]
select = [
    "ALL"
]

ignore = [
    # These rules provide little value to us
    "ANN", # flake8-annotations
    "BLE", # flake8-blind-except
    "COM", # flake8-commas
    "C901", # mccabe (complexity checks)
    "D", # pydocstyle
    "ERA", # eradicate (code in comments)
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "E501", # line-too-long
    "FIX", # flake8-fixme
    "INP001", # implicit-namespace-package
    "S", # flake8-bandit (security rules)
    "SLF001", # private-member-access 
    "T201", # flake8-print
    "T100", # flake8-debugger
    "TD", # flake8-todos
    "PGH003", # blanket-type-ignore
    "PLE2513", # invalid-character-esc
    "PTH", # flake8-use-pathlib

    # These rules were discussed and disabled
    "ISC003", # explicit-string-concatenation
    "NPY002", # numpy-legacy-random (we use `np.random.*` in many places)
    "PD901", # pandas-df-variable-name (we use `df` in many places)
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0915", # too-many-statements
    "PLR2004", # magic-value-comparison
    "RET503", # implicit-return
    "RET504", # unnecessary-assign
    "RET505", # superfluous-else-return
    "SIM108", # if-else-block-instead-of-if-exp
    "TRY300", # try-consider-else (returns in try blocks)
    "TRY301", # raise-within-try
    "TRY003", # raise-vanilla-args (long messages in raise statements)
]
[tool.ruff.lint.per-file-ignores]
# Files related to the Python autograder will often intentionally appear
# broken in isolation. We'll allow specific errors in these files to
# account for that.
#
# - F401: module imported but unused
# - F821: undefined name
# - F841: local variable name is assigned to but never used
# - ARG001: Unused function argument
"exampleCourse/questions/**/tests/setup_code.py" = ["F401", "F821"]
"exampleCourse/questions/**/tests/leading_code.py" = ["F401", "F821", "F841", "ARG001"]
"exampleCourse/questions/**/tests/ans.py" = ["F821"]
"exampleCourse/questions/demo/autograder/codeUpload/submitted_code_samples/**/*.py" = ["ARG001"]

# Ignore uppercase variables and function parameters (e.g. G for a graph)
"exampleCourse/questions/**/*.py" = ["N806", "N803"]
# The zygote specifically uses imports in strange places to facilitate the
# preloading of commonly-used modules.
"zygote.py" = ["E402", "F401"]
"apps/prairielearn/elements/**/*.py" = [
    # Ignore uppercase function parameters (e.g. G for a graph)
    "N803",
    # Allow boolean trap pattern in method signatures
    "FBT001", "FBT002", "FBT003",
    # ignore unused parameters in functions
    "ARG"
]
"apps/prairielearn/python/*.py" = ["N803"]
# Do not require self in method params
"apps/prairielearn/elements/pl-drawing/elements.py" = ["N805"]
"exampleCourse/elementExtensions/pl-drawing/example-logo/example-logo.py" = ["N805"]
# Boolean default positional argument
"graders/**/*.py" = ["FBT002"]
[tool.ruff.format]
exclude = [
    "./exampleCourse/questions/demo/autograder/python/leadingTrailing/tests/trailing_code.py",
    "./exampleCourse/questions/demo/autograder/python/square/tests/initial_code.py",
]

[tool.pyright]
include = [
    "./apps/prairielearn/elements",
    "./apps/prairielearn/python",
    "./graders/c",
]
exclude = [
    "./apps/prairielearn/elements/pl-drawing", # requires refactor
    "./apps/prairielearn/elements/pl-checkbox", # requires refactor
    "./apps/prairielearn/elements/pl-matrix-component-input", # multiple errors
    "./apps/prairielearn/elements/pl-matching", # multiple errors
    "./apps/prairielearn/elements/pl-prairiedraw-figure", # deprecated
    "./apps/prairielearn/elements/pl-threejs", # deprecated
]
extraPaths = ["./apps/prairielearn/python"]
pythonVersion = "3.10"
reportUnnecessaryTypeIgnoreComment = "error"

[tool.pytest.ini_options]
addopts = "--cov=apps"
testpaths = ["apps/prairielearn/elements", "apps/prairielearn/python"]
